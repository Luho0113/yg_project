<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.younggam.app.mapper.ReviewerInfoMapper">

<select id="selectReviewersInfos" resultType="com.younggam.app.vo.UserInfoVO">
	select u.ui_nickname, u.ui_file_path   
	from user_info u
	where u.ui_nickname like '%' #{uiNickname} '%'
</select>


<select id="selectDetailReviewersInfos" resultType="com.younggam.app.vo.ReviewInfoVO"> 
	select u.ui_nickname, u.ui_file_path,
		   r.ri_movie_id, r.ri_content, r.ri_num
	from user_info u, review_info r 
	where u.ui_id = r.ui_id and ri_movie_id = #{riMovieId}
</select>

<!--소수점 삭제 -->
<select id="selectStarInfos" resultType="com.younggam.app.vo.ReviewInfoVO">
  SELECT ROUND(AVG(ri_star), 1) ri_star
  FROM review_info
  WHERE ri_movie_id = #{riMovieId}
</select>

<!-- 최근 리뷰 리스트 -->
<!-- 일단 리뷰어 최신순으로 정보 다 불러오기 -->
<select id="selectNewReviewersInfos" resultType="com.younggam.app.vo.ReviewInfoVO">
select r.*, u.* 
from review_info r, user_info u
where r.ui_id = u.ui_id
order by r.ri_credate desc
</select>

<!-- 별점 높은 영화 -->
<select id="selectBestMoviesInfos" resultType="com.younggam.app.vo.ReviewInfoVO">
select ri_movie_id, round(AVG(ri_star), 1) ri_star
from review_info
group by ri_movie_id
order by 2 desc
</select>

</mapper>